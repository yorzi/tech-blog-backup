<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: refactor | @yorzi]]></title>
  <link href="http://yorzi.github.com/blog/categories/refactor/atom.xml" rel="self"/>
  <link href="http://yorzi.github.com/"/>
  <updated>2012-10-23T13:28:00+08:00</updated>
  <id>http://yorzi.github.com/</id>
  <author>
    <name><![CDATA[Andy Wang]]></name>
    <email><![CDATA[wangyaodi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[where optimization happens]]></title>
    <link href="http://yorzi.github.com/2010/08/27/where-optimization-happens/"/>
    <updated>2010-08-27T00:00:00+08:00</updated>
    <id>http://yorzi.github.com/2010/08/27/where-optimization-happens</id>
    <content type="html"><![CDATA[<p>Jonathan just mentionedÂ <a href="http://www.idapted.com/blog/2010/08/16/small-details-big-gains/" target="_blank">small details and big gains</a> in his post days ago, I totally agree with him from technology perspective, meanwhile, I found more samples to support his points. Yeah, technology is born for changing people's life, I call this kind of changes as Optimization.Optimization is happening everyday to Idapted Platform, as it's one of most important way to become perfect.</p>

<p>In last week, our StudyCenter, the front end user interface system, was optimized in its registration flow. Previously, we have many registration channels for different partners. Our marketing department is mainly responsible for these registration channels, and update them frequently. Accordingly, technology team and sales team also need to cooperate. Here problem is, demands change more quickly than tech guys and sales system can follow up.</p>

<p>Now we refactor the control of registration flow, to re-think every departments' needs, we split the conditions for each department, after this improvement, people in different departments will not affect others, specially to tech guys, this is more flexible and maintainable. They will not messy all the situations up.</p>

<p>Another sample of optimization is that, we iterated many rounds of development to build a CRM system internally before, however, we integrated too many features inside the CRM, which were used by different departments. Because Idapted customers' accounts are increasing rapidly, the speed of whole system is getting slower and slower. Obviously, the CRM system needs optimization.</p>

<p>We finally split the CRM system in three parts which are used by different people, The independent and small system is well designed for certain users, that's the key of this Optimization. It gains us faster system response and clearer business devision.</p>

<p>All in all, to serve learners better user experience, to improve internal working process or to increase system efficiency, all of these optimizations are about making things perfect. This is the belief of <a href="http://www.idapted.com">Idapted</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Love named_scope]]></title>
    <link href="http://yorzi.github.com/2009/12/07/love-named_scope/"/>
    <updated>2009-12-07T00:00:00+08:00</updated>
    <id>http://yorzi.github.com/2009/12/07/love-named_scope</id>
    <content type="html"><![CDATA[<p>Rails Best Practice Snippet: About named_scope.
Reference link to the PDF. <a rel="attachment wp-att-125" href="http://tech.wangyaodi.com/?attachment_id=125">Rails-best-practices.</a></p>

<p>named_scope is a Rails 2.x feature which can simplify your rails code, move your finders into their own Model, and compact the code logically and gracefully. Below code refactoring is a named_scope sample to show the tricky.</p>

<p><strong>BEFORE</strong>
<code lang="ruby">
class PostController &lt; ApplicationController
  def search</p>

<pre><code>conditions = { :title =&gt; "%#{params[:title]}%" } if params[:title]
conditions.merge!{ :content =&gt; "%#{params[:content]}%" } if params[:content]
case params[:order]
  when "title" : order = "title desc"
  when "created_at" : order = "created_at"
end
if params[:is_published]
  conditions.merge!{ :is_published =&gt; true }
end
@posts = Post.find(:all, :conditions =&gt; conditions, :order =&gt; order,
                         :limit =&gt; params[:limit])
</code></pre>

<p>  end
end
</code></p>

<p><strong>AFTER</strong>
<code lang="ruby">
class Post &lt; ActiveRecord::Base
  named_scope :matching, lambda { |column, value|</p>

<pre><code>return {} if value.blank?
{ :conditions =&gt; ["#{column} like ?", "%#{value}%"] }
</code></pre>

<p>  }
  named_scope :order, lambda { |order|
  { :order => case order</p>

<pre><code>  when "title" : "title desc"
  when "created_at" : "created_at"
end }
</code></pre>

<p>  }
end
</code>
<code lang="ruby">
class PostController &lt; ApplicationController
  def search</p>

<pre><code>@posts = Post.matching(:title, params[:title])
             .matching(:content, params[:content])
             .order(params[:order])
</code></pre>

<p>  end
end
</code></p>

<p>More references :
<a href="http://ryandaigle.com/articles/2008/3/24/what-s-new-in-edge-rails-has-finder-functionality">http://ryandaigle.com/articles/2008/3/24/what-s-new-in-edge-rails-has-finder-functionality</a>
<a href="http://railscasts.com/episodes/108-named-scope">http://railscasts.com/episodes/108-named-scope</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Law of Demeter]]></title>
    <link href="http://yorzi.github.com/2009/11/26/law-of-demeter/"/>
    <updated>2009-11-26T00:00:00+08:00</updated>
    <id>http://yorzi.github.com/2009/11/26/law-of-demeter</id>
    <content type="html"><![CDATA[<p>Rails Best Practice Snippet: Model refactor.
Reference link to the PDF.<a href='http://tech.wangyaodi.com/?attachment_id=125' rel='attachment wp-att-125'>Rails-best-practices.</a></p>

<p>Before:
<code lang="ruby">
class Invoice &lt; ActiveRecord::Base
  belongs_to :user
end
&lt;%= @invoice.user.name %>
&lt;%= @invoice.user.address %>
&lt;%= @invoice.user.cellphone %>
</code>
After:
<code lang="rails">
class Invoice &lt; ActiveRecord::Base
  belongs_to :user
  delegate :name, :address, :cellphone, :to => :user, :prefix => true
end
&lt;%= @invoice.user_name %>
&lt;%= @invoice.user_address %>
&lt;%= @invoice.user_cellphone %>
</code></p>

<p>See more details about <a href="http://api.rubyonrails.org/classes/Module.html#M000110">Delegate</a> in rails doc.</p>
]]></content>
  </entry>
  
</feed>
