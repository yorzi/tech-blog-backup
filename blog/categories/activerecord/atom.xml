<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: activerecord | @yorzi]]></title>
  <link href="http://tech.wangyaodi.com/blog/categories/activerecord/atom.xml" rel="self"/>
  <link href="http://tech.wangyaodi.com/"/>
  <updated>2012-10-23T16:11:35+08:00</updated>
  <id>http://tech.wangyaodi.com/</id>
  <author>
    <name><![CDATA[Andy Wang]]></name>
    <email><![CDATA[wangyaodi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Study Note : serialize object in ActiveRecord]]></title>
    <link href="http://tech.wangyaodi.com/2010/08/04/serialize-object-in-activerecord/"/>
    <updated>2010-08-04T00:00:00+08:00</updated>
    <id>http://tech.wangyaodi.com/2010/08/04/serialize-object-in-activerecord</id>
    <content type="html"><![CDATA[<h2><span style="color: #444444; line-height: 24px; font-size: 16px;">Copied from <a href="http://api.rubyonrails.org/classes/ActiveRecord/Base.html#M001799" target="_blank">Ruby on Rails API doc</a>. Store here as a study notes for myself.

Active Record can <a href="Base.html#M001799">serialize</a> any object in text <a href="Base.html#M001809">columns</a> using YAML. To do so, you must specify this with a call to the class method <tt><a href="Base.html#M001799">serialize</a></tt>. This makes it possible to store arrays, hashes, and other non-mappable objects without doing any additional work. Example:</span></h2>


<pre>  class User &lt; ActiveRecord::Base
    serialize :preferences
  end

  user = User.create(:preferences =&gt; { "background" =&gt; "black", "display" =&gt; large })
  User.find(user.id).preferences # =&gt; { "background" =&gt; "black", "display" =&gt; large }</pre>


<p>You can also specify a class option as the second parameter that‘ll raise an exception if a serialized object is retrieved as a descendant of a class not in the hierarchy. Example:</p>

<pre>  class User &lt; ActiveRecord::Base
    serialize :preferences, Hash
  end

  user = User.create(:preferences =&gt; %w( one two three ))
  User.find(user.id).preferences    # raises SerializationTypeMismatch</pre>

]]></content>
  </entry>
  
</feed>
